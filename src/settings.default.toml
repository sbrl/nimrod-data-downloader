# The output directory to write to
output = "CHANGE_ME"

# Whether to resume downloading from where a previous iteration left off.
# This is done by counting the number of files in the results directory,
# and skipping that number of files when scanning the remote server
# (since the iterating the remote ftp server is deterministic)
resume = true

[ftp]
### CEDA Data Archive Downloader ###

url = "ftp://ftp.ceda.ac.uk:21/badc/ukmo-nimrod/data/composite/uk-1km"

# The FTP login credentials to use when downloading the data
# FTP is indeed very insecure, but it's the best we've got to work it :-/
username = "CHANGE_ME"
password = "CHANGE_ME"

# Download up to 3 files simultaneously
parallel = 3
# Retry downloading a file up to 3 times if it fails
retries = 3
# Delay retries by this many milliseconds
retry_delay = 2500
# Max amount of time (in seconds) to wait for a file to download before timing out and retrying
download_timeout = 30

# Files to skip and ignore.
blacklist = [
	"metoffice-c-band-rain-radar_uk_20110307_1km-composite.dat.gz.tar",
	"metoffice-c-band-rain-radar_uk_20110309_1km-composite.dat.gz.tar",
	"metoffice-c-band-rain-radar_uk_20161216_1km-composite.dat.gz.tar",
	"metoffice-c-band-rain-radar_uk_20161218_1km-composite.dat.gz.tar"
]

[parsing]

# [parsing.bounds]
	# top_left = 		{ latitude = -9999, longitude = -9999 }
	# bottom_right =	{ latitude = -9999, longitude = -9999 }
